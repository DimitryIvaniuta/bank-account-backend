# --------------------------------------------------------------------------------
# Multi-stage Dockerfile for Bank Account Backend
#
# Stage 1: Build the application using Maven and Temurin JDK 21
# Stage 2: Run the application on a lightweight Temurin JRE 21 image
# --------------------------------------------------------------------------------

# --------------------------
# 1) Builder stage
# --------------------------
# Use official Maven image with Temurin JDK 21 for compiling the project
FROM maven:3.9.9-eclipse-temurin-21 AS builder

# Set working directory inside the container
WORKDIR /app

# Copy only the POM first to leverage Docker cache when dependencies change
COPY pom.xml ./

# Copy the source code to the container
COPY src ./src

# Run Maven build, skipping tests for faster image creation
# The result is a packaged JAR in target/
RUN mvn clean package -DskipTests

# --------------------------
# 2) Runtime stage
# --------------------------
# Use a smaller JRE image for running the application
FROM eclipse-temurin:21-jre-jammy

# Set working directory for the runtime container
WORKDIR /app

# Copy the compiled JAR from the builder stage
# This is the 'fat jar' generated by Maven
COPY --from=builder /app/target/bank-account-backend-0.0.1-SNAPSHOT.jar ./app.jar

# Expose application port
# Spring Boot default is 8080
EXPOSE 8080

# Define the entrypoint to run the JAR
ENTRYPOINT ["java","-jar","app.jar"]